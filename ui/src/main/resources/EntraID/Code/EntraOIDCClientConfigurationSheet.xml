<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.5" reference="EntraID.Code.EntraOIDCClientConfigurationSheet" locale="">
  <web>EntraID.Code</web>
  <name>EntraOIDCClientConfigurationSheet</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <parent>WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <version>1.1</version>
  <title>EntraOIDCClientConfigurationSheet</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output="false"}}
#set ($discard = $xwiki.jsx.use('EntraID.Code.EntraOIDCClientConfigurationSheet'))
#set ($discard = $xwiki.ssx.use('EntraID.Code.EntraOIDCClientConfigurationSheet'))
#includeMacros("XWiki.AdminFieldsDisplaySheet")
#set ($params = {
  'XWiki.OIDC.ClientConfigurationClass': ['skipped', 'enableUser', 'scope', 'groupsClaim',
    'groupsMapping', 'allowedGroups', 'forbiddenGroups', 'userNameFormatter', 'userMapping', 'clientSecret',
    'clientId', 'xwikiLoginGroups'],
  'EntraID.Code.EntraIDConfigurationClass': ['tenantId', 'enableXWikiLoginGlobal', 'xwikiLoginGroups']
})
#set ($fieldSetClass = "entraid")
#set ($configDoc = $xwiki.getDocument('EntraID.Code.EntraOIDCClientConfiguration'))
#set ($configClassName = 'XWiki.OIDC.ClientConfigurationClass')
{{/velocity}}

{{velocity}}
#if ("$!section" != '')
  {{html clean="false"}}
  #set($formId = "${section.toLowerCase()}_${configClassName}")

  &lt;form id="$escapetool.xml($formId)" method="post"
      action="$escapetool.xml($xwiki.getURL($configDoc, 'saveandcontinue'))"
      class="xform"&gt;
    &lt;fieldset class="$escapetool.xml($fieldSetClass)"&gt;
    #foreach ($entry in $params.entrySet())
      #set($obj = $configDoc.getObject($entry.key))
      #set ($fields = $entry.value)
      #if ($fields.size() &gt; 0)
        &lt;dl&gt;
      #end
      #foreach ($field in $fields)
        #set ($prop = $obj.xWikiClass.get($field))
        #if ($prop)
          #__displayXProperty($prop)
        #elseif ($field.html)
          $field.html
        #end
      #end
      #if ($fields.size() &gt; 0)
        &lt;/dl&gt;
      #end
    #end
    &lt;/fieldset&gt;
    &lt;div class="hidden"&gt;
      &lt;input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" /&gt;
      &lt;input type="hidden" name="xcontinue" value="$xwiki.getURL($currentDoc, 'admin',
        "editor=${escapetool.url(${editor})}&amp;section=${escapetool.url(${section})}&amp;space=${escapetool.url(${currentSpace})}")" /&gt;
      &lt;input type="hidden" name="xredirect" value="$xwiki.getURL($currentDoc, 'admin',
        "editor=${escapetool.url(${editor})}&amp;section=${escapetool.url(${section})}&amp;space=${escapetool.url(${currentSpace})}")" /&gt;
      &lt;input type="hidden" name="classname" value="$escapetool.xml($configClassName)" /&gt;
    &lt;/div&gt;
    &lt;div class="bottombuttons"&gt;
      &lt;p class="admin-buttons"&gt;
        &lt;span class="buttonwrapper"&gt;&lt;input class="button" type="submit" name="formactionsac"
          value="$escapetool.xml($services.localization.render('admin.save'))" /&gt;&lt;/span&gt;
      &lt;/p&gt;
    &lt;/div&gt;
  &lt;/form&gt;
  {{/html}}
#end
{{/velocity}}
</content>
  <object>
    <name>EntraID.Code.EntraOIDCClientConfigurationSheet</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>22b359f0-b98b-411b-a90e-9d15a4cbbd9f</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>define('entra-properties', {
  prefix: 'entra.properties.data.',
  keys: [
    'newEntry',
    'tip.key.groupMap',
    'tip.value.groupMap',
    'tip.key.userMap',
    'tip.value.userMap',
    'tip.value.forbiddenGroup',
    'tip.value.allowedGroup',
  ]
});
require.config({
  paths: {
    'xwiki-suggestGroups': "$xwiki.getSkinFile('uicomponents/suggest/suggestUsersAndGroups.js', true)" +
      "?v=$escapetool.url($xwiki.version)"
  }
});

require(['jquery', 'xwiki-l10n!entra-properties', 'xwiki-suggestGroups'], function($, l10n) {
  function maybeMakeFieldSelectable(input) {
      if ($(input).data('selectize')) {
        let key = '.' + $(input).data('keyClass');
        $(key).suggestGroups({
          userScope: 'LOCAL_ONLY'
        });
      }
    };

  // Function to initialize and display existing properties.
  function initializeAndDisplayExistingProperties(input, options) {
    const propStr = $(input).val();
    const properties = [];
    let escaped = false;
    let currentProp = '';

    for (let i = 0; i &lt; propStr.length; i++) {
      const c = propStr[i];
      if (escaped) {
        currentProp += c;
        escaped = false;
      } else if (c === options.escapeChar) {
        escaped = true;
      } else if (c === options.separator) {
        addProp(properties, currentProp);
        currentProp = '';
      } else {
        currentProp += c;
      }
    }
    if (currentProp.length &gt; 0) {
      addProp(properties, currentProp);
    }

    // Render each property depending on data type
    const dataType = $(input).data('type');
    $.each(properties, function(_, prop) {
      if(dataType === 'map') {
        $(input).before(createMapPropertyEntry(prop[0], prop[1], input, options));
      } else if (dataType === 'list') {
        $(input).before(createListPropertyEntry(prop[1], input, options));
      }
      maybeMakeFieldSelectable(input);
    });
  };

  function addProp(properties, prop) {
    const key = prop.substring(0, prop.indexOf('='));
    const value = prop.substring(prop.indexOf('=') + 1) || '';
    properties.push([key, value]);
  };

  function escapeValue(value, options) {
    return value.split('').map(function(c) {
      return c === options.separator || c === options.escapeChar ? options.escapeChar + c : c;
    }).join('');
  };

  function updateListValue(input, options) {
    const propertiesStr = $(input).siblings('.property-entry').map(function() {
      const value = $(this).find('.value').val();
      return value ? escapeValue(value, options) : null;
    }).get().join(options.separator);
    if ($(input).prop('tagName').toLowerCase() === 'textarea') {
      $(input).text(propertiesStr);
    } else {
      $(input).val(propertiesStr);
    }
  };

  function updateMapValue(input, options) {
    const propertiesStr = $(input).siblings('.property-entry').map(function() {
      const key = $(this).find('.key').val();
      const value = $(this).find('.value').val();
      return key &amp;&amp; value ? `${escapeValue(key, options)}=${escapeValue(value, options)}` : null;
    }).get().join(options.separator);
    if ($(input).prop('tagName').toLowerCase() === 'textarea') {
      $(input).text(propertiesStr);
    } else {
      $(input).val(propertiesStr);
    }
  };

  function createMapPropertyEntry(key, value, input, options) {
    const $entry = $('&lt;div&gt;').addClass('property-entry');
    const $keyInput = $('&lt;input&gt;').attr('type', 'text').addClass('key').addClass($(input).data('keyClass')).attr('placeholder',
      l10n.get($(input).data('keyTip'))).val(key || '');

    const $valueInput = $('&lt;input&gt;').attr('type', 'text').addClass('value').attr('placeholder',
      l10n.get($(input).data('valueTip'))).val(value || '');

    const $removeBtn = $('&lt;span&gt;').addClass('remove').click(function() {
      $(this).closest('.property-entry').remove();
      updateMapValue(input, options);
    });

    $keyInput.change(function() {
      updateMapValue(input, options);
    });
    $valueInput.change(function() {
      updateMapValue(input, options);
    });

    return $entry.append($keyInput, options.mapsToString, $valueInput, $removeBtn);
  };

  function createListPropertyEntry(value, input, options) {
    const $entry = $('&lt;div&gt;').addClass('property-entry');
    const $valueInput = $('&lt;input&gt;').attr('type', 'text').addClass('value').attr('placeholder',
      l10n.get($(input).data('valueTip'))).val(value || '');
    const $removeBtn = $('&lt;span&gt;').addClass('remove').click(function() {
      $(this).closest('.property-entry').remove();
      updateListValue(input, options);
    });
    $valueInput.change(function() {
      updateListValue(input, options);
    });
    return $entry.append($valueInput, $removeBtn);
  };

  $(function() {
    const defaultOptions = {
      separator: ',',
      mapsToString: ' \u2192 ',
      escapeChar: '\\',
      newEntryMessage: l10n.get('newEntry')
    };

    $(document).on('click', '.new-entry', function() {
      const input = this.previous('textarea');
      const options = $(this).data('options');
      const dataType = $(input).data('type');
      if(dataType === 'map') {
        $(this).before(createMapPropertyEntry('', '', input, options));
      } else if (dataType === 'list') {
        $(this).before(createListPropertyEntry('', input, options));
      }
      maybeMakeFieldSelectable(input);
    });

    $('.properties-editor').each(function() {
      const options = {
        separator: $(this).data('separator') || defaultOptions.separator,
        mapsToString: defaultOptions.mapsToString,
        escapeChar: $(this).data('escape-character') || defaultOptions.escapeChar,
        newEntryMessage: defaultOptions.newEntryMessage
      };
      // Hide original input, display New Entry button, and initialize properties.
      $(this).hide();
      $(this).after($('&lt;span&gt;').addClass('new-entry').text(options.newEntryMessage).data('options', options));
      initializeAndDisplayExistingProperties(this, options);
    });
  });
});</code>
    </property>
    <property>
      <name>Property editor</name>
    </property>
    <property>
      <parse>0</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>EntraID.Code.EntraOIDCClientConfigurationSheet</name>
    <number>1</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>dc307977-eb98-4e28-bef5-4915f49b9f98</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>$(document).on('xwiki:dom:loaded', function() {
  var groupMapping = $('XWiki.OIDC.ClientConfigurationClass_0_groupsMapping');
  var userMapping = $('XWiki.OIDC.ClientConfigurationClass_0_userMapping');
  var allowedGroups = $('XWiki.OIDC.ClientConfigurationClass_0_allowedGroups');
  var forbiddenGroups = $('XWiki.OIDC.ClientConfigurationClass_0_forbiddenGroups');

  groupMapping.setAttribute('data-key-tip', 'tip.key.groupMap');
  groupMapping.setAttribute('data-value-tip', 'tip.value.groupMap');
  groupMapping.setAttribute('data-type', 'map');
  groupMapping.setAttribute('data-key-class', 'group-map-key');
  groupMapping.setAttribute('data-selectize', true);
  groupMapping.addClassName('properties-editor');

  userMapping.setAttribute('data-key-tip', 'tip.key.userMap');
  userMapping.setAttribute('data-value-tip', 'tip.value.userMap');
  userMapping.setAttribute('data-type', 'map');
  userMapping.setAttribute('data-key-class', 'user-map-key');
  userMapping.setAttribute('data-selectize', false);
  userMapping.addClassName('properties-editor');

  allowedGroups.setAttribute('data-value-tip', 'tip.value.allowedGroup');
  allowedGroups.setAttribute('data-type', 'list');
  allowedGroups.setAttribute('data-selectize', false);
  allowedGroups.addClassName('properties-editor');

  forbiddenGroups.setAttribute('data-value-tip', 'tip.value.forbiddenGroup');
  forbiddenGroups.setAttribute('data-type', 'list');
  forbiddenGroups.setAttribute('data-selectize', false);
  forbiddenGroups.addClassName('properties-editor');
});</code>
    </property>
    <property>
      <name>Properties definition</name>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
  <object>
    <name>EntraID.Code.EntraOIDCClientConfigurationSheet</name>
    <number>0</number>
    <className>XWiki.StyleSheetExtension</className>
    <guid>2fb22502-81fe-411c-830b-b6b9ff5f998c</guid>
    <class>
      <name>XWiki.StyleSheetExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <restricted>0</restricted>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <contentType>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>contentType</name>
        <number>6</number>
        <prettyName>Content Type</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>CSS|LESS</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </contentType>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>label .xHint {
  text-transform: none !important;
}

div.property-entry span.remove {
  min-height: 1.5rem;
  min-width: 1.5rem;
  margin-left: 1rem;
  background: url($xwiki.getSkinFile('icons/silk/cross.png')) no-repeat;
  cursor: pointer;
}

div.property-entry {
  padding: 0.5rem 0rem;
  display: flex;
  align-items: center;
}

span.new-entry {
  font-size: 0.9em;
  background:url($xwiki.getSkinFile('icons/silk/add.png')) no-repeat;
  padding-left:2rem;
  display:inline-block;
  margin-top:0.5rem;
  cursor:pointer;
}

div.selectize-control, div.selectize-input, input.key, input.value {
  width: -webkit-fill-available;
  height: 4rem;
}
</code>
    </property>
    <property>
      <contentType>CSS</contentType>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
